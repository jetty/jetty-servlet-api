<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.eclipse.jetty.toolchain</groupId>
    <artifactId>jetty-toolchain</artifactId>
    <version>1.8-parent-SNAPSHOT</version>
  </parent>
  <artifactId>jetty-jakarta-servlet-api</artifactId>
  <version>5.0.3-SNAPSHOT</version>
  <packaging>jar</packaging>
  <name>Jetty :: Jakarta Servlet API and Schemas for JPMS and OSGi</name>

  <scm>
    <connection>scm:git:https://github.com/jetty/${jetty.git.repo}.git</connection>
    <developerConnection>scm:git:git@github.com:eclipse/${jetty.git.repo}.git</developerConnection>
    <tag>HEAD</tag>
    <url>https://github.com/jetty/${jetty.git.repo}</url>
  </scm>

  <properties>
    <jdk.version.minimum>11</jdk.version.minimum>
    <jetty.git.repo>jetty.servlet.api</jetty.git.repo>
    <!-- license check is skip because of different license headers -->
    <license.skip>true</license.skip>
  </properties>

  <dependencies>
    <dependency>
      <groupId>jakarta.servlet</groupId>
      <artifactId>jakarta.servlet-api</artifactId>
      <version>5.0.0</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty.toolchain</groupId>
      <artifactId>jetty-schemas</artifactId>
      <version>5.2</version>
    </dependency>
  </dependencies>

  <repositories>
    <repository>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>jetty.snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/jetty-snapshots</url>
    </repository>
  </repositories>

  <pluginRepositories>
    <pluginRepository>
      <releases>
        <enabled>false</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <id>jetty.snapshots</id>
      <url>https://oss.sonatype.org/content/repositories/jetty-snapshots</url>
    </pluginRepository>
  </pluginRepositories>

  <build>
    <plugins>

      <!-- Generate the correct OSGi manifest -->
      <plugin>
        <groupId>org.apache.felix</groupId>
        <artifactId>maven-bundle-plugin</artifactId>
        <version>5.1.9</version>
        <extensions>true</extensions>
        <configuration>
          <instructions>
            <Bundle-SymbolicName>org.eclipse.jetty.servlet-api</Bundle-SymbolicName>
            <Bundle-Name>Eclipse Jetty Servlet API and Schemas for JPMS and OSGi</Bundle-Name>
            <Bundle-Description>Combined servlet api and schemas for use in JPMS and OSGi environments</Bundle-Description>
            <Bundle-RequiredExecutionEnvironment>JavaSE-11</Bundle-RequiredExecutionEnvironment>
            <Bundle-Vendor>Eclipse</Bundle-Vendor>
            <Bundle-DocURL>https://eclipse.org/jetty</Bundle-DocURL>
            <_nouses>true</_nouses>
            <Export-Package>jakarta.servlet;uses:="jakarta.servlet.annotation,jakarta.servlet.descriptor";version="5.0.0",
              jakarta.servlet.resources;version="5.0.0",
              jakarta.servlet.jsp.resources;version="5.0.0",
              jakarta.servlet.annotation;uses:="jakarta.servlet";version="5.0.0",
              jakarta.servlet.http;uses:="jakarta.servlet";version="5.0.0",
              jakarta.servlet.descriptor;version="5.0.0"</Export-Package>
          </instructions>
        </configuration>
        <executions>
          <execution>
            <id>bundle-manifest</id>
            <goals>
              <goal>manifest</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Unpack source dependencies in the target/sources/ directory -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.6.1</version>
        <executions>
          <execution>
            <id>unpack-source</id>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <classifier>sources</classifier>
              <failOnMissingClassifierArtifact>false</failOnMissingClassifierArtifact>
              <outputDirectory>${project.build.directory}/sources</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Shade in the compiled classes and the resources from jetty-schemas -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <dependencies>
          <dependency>
            <groupId>org.eclipse.jetty.toolchain</groupId>
            <artifactId>jetty-build-support</artifactId>
            <version>1.5</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <goals>
              <goal>shade</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <createSourcesJar>false</createSourcesJar>
              <shadeSourcesContent>true</shadeSourcesContent>
              <createDependencyReducedPom>true</createDependencyReducedPom>
              <dependencyReducedPomLocation>${project.build.directory}/dependency-reduced-pom.xml</dependencyReducedPomLocation>
              <artifactSet>
                <includes>
                  <include>jakarta.servlet:jakarta.servlet-api</include>
                  <include>org.eclipse.jetty.toolchain:jetty-schemas</include>
                </includes>
              </artifactSet>
              <filters>
                <filter>
                  <artifact>jakarta.servlet:jakarta.servlet-api</artifact>
                  <includes>
                    <include>jakarta/**/*.properties</include>
                    <include>jakarta/**/package.html</include>
                  </includes>
                </filter>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>jakarta/servlet/jsp/**</exclude>
                    <exclude>META-INF/**</exclude>
                    <exclude>about.html</exclude>
                  </excludes>
                </filter>
              </filters>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                  <resource>META-INF/MANIFEST.MF</resource>
                  <file>${project.build.outputDirectory}/META-INF/MANIFEST.MF</file>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                  <resource>META-INF/LICENSE.md</resource>
                  <file>src/main/resources/META-INF/LICENSE.md</file>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.IncludeResourceTransformer">
                  <resource>META-INF/NOTICE.md</resource>
                  <file>src/main/resources/META-INF/NOTICE.md</file>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Add the target/sources/ directory as a source directory -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.4.0</version>
        <executions>
          <execution>
            <id>set-osgi-version</id>
            <goals>
              <goal>parse-version</goal>
            </goals>
            <phase>validate</phase>
          </execution>
          <execution>
            <id>add-source</id>
            <goals>
              <goal>add-source</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <sources>
                <source>${project.build.directory}/sources</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Add module-info.class to the shaded jar -->
      <plugin>
        <groupId>org.moditect</groupId>
        <artifactId>moditect-maven-plugin</artifactId>
        <version>1.0.0.Final</version>
        <executions>
          <execution>
            <id>add-module-info</id>
            <goals>
              <goal>add-module-info</goal>
            </goals>
            <phase>package</phase>
            <configuration>
              <overwriteExistingFiles>true</overwriteExistingFiles>
              <module>
                <moduleInfoSource>module jetty.servlet.api {
                  exports jakarta.servlet;
                  exports jakarta.servlet.annotation;
                  exports jakarta.servlet.descriptor;
                  exports jakarta.servlet.http;
                  exports jakarta.servlet.resources;
                  //open resources so Class.getResource() can access them
                  opens jakarta.servlet.resources;
                  }</moduleInfoSource>
              </module>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
